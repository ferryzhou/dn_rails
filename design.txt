rails generate scaffold Word en_name:string title:string link:string category:string
rails generate scaffold Gitem word_id:integer word_en_name:string raw_title:string raw_link:string raw_description:text pubdate:datetime title:string link:string description:text source:string count:integer cluster_id:integer 
rails generate scaffold Cluster word_id:integer word_en_name:string gitem_id:integer title:string link:string description:text size:integer gmax_count:integer

bundle exec rake db:migrate

class Word < ActiveRecord::Base
  has_many :gitems
  has_many :clusters
end

class Gitem < ActiveRecord::Base
  belongs_to :clusters
  belongs_to :word
end

class Cluster < ActiveRecord::Base
  has_many :gitems
  belongs_to :word
end


only admin can change Word table

the program check Word table, do processing and populate Gitem and Cluster table

Offline Processing ---------------->

Kind of workers:
1. Crawler, regularly retrieve rss feeds and archieve to local directory
2. SingleFeedAggregator, read unprocessed raw feed, update Gnews and Cluster
3. TopicAggregator, 
4. Views

Crawler:
given a set of namess and links, archieve. if already archived for current time slot, skip

Import:
given word_id, name, read unprocessed feed, extract items, process each item:
  generate gnews item,
  
Cluster:
get clusters sort by id,
  do for each unclustered item
    do for each clusters
	  add if close
	create new if no close clusters

Rails Based Processing ----------------->
use heroku job scheduler to run background tasks
Gitem:: update_feed, update_all
Cluster: cluster_feed, cluster_all

for testing, using local archieved feeds


